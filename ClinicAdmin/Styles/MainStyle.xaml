<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    >

    <!-- Start: Pop-up Button Style -->
    <Style x:Key="PopupButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Height"
                Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="BorderBrush"
                                    Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="BorderBrush"
                                    Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
     <!--End: Pop-up Button Style--> 

     <!--Start: iToggleButton Style--> 
    <Style x:Key="iToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Viewbox Height="20"
                                 Width="20"
                                 Margin="0 6 0 0"
                                 Stretch="UniformToFill">
                            <Canvas Height="512"
                                    Width="512">
                                <Path Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                      Fill="{DynamicResource TertiaryIconColor}"
                                      Margin="0 0 0 0" />
                                <Path Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                      Fill="{DynamicResource TertiaryIconColor}"
                                      Margin="0 20 0 0" />
                                <Path Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                      Fill="{DynamicResource TertiaryIconColor}"
                                      Margin="0 40 0 0" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="Transparent" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="Transparent" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
     <!--End: iToggleButton Style--> 

    <Style x:Key="menuButton"
           TargetType="Button">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="#CDE0C9" />
        <Setter Property="Margin"
                Value="0 0 0 5" />
        <Setter Property="Height"
                Value="45" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Tag"
                Value="#CDE0C9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="4 0 0 0"
                            BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="#e1ebdf"></Setter>
                <Setter Property="Tag"
                        Value="#e1ebdf"></Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5"
                                             EndPoint="1,0.5">
                            <GradientStop Color="#68b2a0"
                                          Offset="0" />
                            <GradientStop Color="#CDE0C9"
                                          Offset="3" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="4 0 0 0"
                                    BorderBrush="Transparent">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <Style x:Key="menuButtonIcon"
           TargetType="fa:IconImage">
        <Setter Property="Width"
                Value="23" />
        <Setter Property="Height"
                Value="23" />
        <Setter Property="Margin"
                Value="35 0 20 0" />
        <Setter Property="Foreground"
                Value="{Binding Path=Tag,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"></Setter>
    </Style>

    <Style x:Key="menuButtonText"
           TargetType="TextBlock">
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"></Setter>
    </Style>

    <Style x:Key="menuButtonActive"
           TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5"
                                     EndPoint="1,0.5">
                    <GradientStop Color="#68b2a0"
                                  Offset="0" />
                    <GradientStop Color="#CDE0C9"
                                  Offset="3" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Margin"
                Value="0 0 0 5" />
        <Setter Property="Height"
                Value="45" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Tag"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="4 0 0 0"
                            BorderBrush="#CDE0C9">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="windowButton"
           TargetType="Button">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Width"
                Value="15" />
        <Setter Property="Height"
                Value="15" />
        <Setter Property="Margin"
                Value="5 0 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Foreground}" />
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="modernTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="5"
                            Background="White"
                            Padding="8 0"
                            Height="35"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource TertiaryIconColor}">
                        <Grid>
                            <Rectangle StrokeThickness="1" />
                            <TextBox Margin="1"
                                     Text="{TemplateBinding Text}"
                                     BorderThickness="0"
                                     Background="Transparent"
                                     VerticalAlignment="Center"
                                     Padding="5"
                                     FontSize="13"
                                     Foreground="Gray"
                                     x:Name="searchBox" />
                            <TextBlock IsHitTestVisible="False"
                                       Text="Tìm kiếm..."
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="0 0 0 0"
                                       FontSize="13"
                                       Foreground="DarkGray"
                                       Grid.Column="1">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=searchBox}"
                                                         Value="">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>